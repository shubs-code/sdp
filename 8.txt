#Lab 8 Builder Pattern
Implement Builder pattern for  Computer Configuration like:
CPU
GPU
Internal Memory
External Memory
OS
Touch Screen
Bluetooth Mouse
Bluetooth Keyboard etc.

%%writefile ComputerBuilderDemo.java
//fluent builder

class Computer {
    private String cpu;
    private String gpu;
    private String internalMemory;
    private String externalMemory;
    private String os;
    private boolean touchScreen;
    private boolean bluetoothMouse;
    private boolean bluetoothKeyboard;


    public void setCPU(String cpu) { this.cpu = cpu; }
    public void setGPU(String gpu) { this.gpu = gpu; }
    public void setInternalMemory(String internalMemory) { this.internalMemory = internalMemory; }
    public void setExternalMemory(String externalMemory) { this.externalMemory = externalMemory; }
    public void setOS(String os) { this.os = os; }
    public void setTouchScreen(boolean touchScreen) { this.touchScreen = touchScreen; }
    public void setBluetoothMouse(boolean bluetoothMouse) { this.bluetoothMouse = bluetoothMouse; }
    public void setBluetoothKeyboard(boolean bluetoothKeyboard) { this.bluetoothKeyboard = bluetoothKeyboard; }

    @Override
    public String toString() {
        return "Computer with " + cpu + " CPU, " + gpu + " GPU, " +
               internalMemory + " internal memory, " + externalMemory +
               " external memory, running " + os + " OS, " +
               (touchScreen ? "Touch Screen enabled, " : "No Touch Screen, ") +
               (bluetoothMouse ? "Bluetooth Mouse, " : "No Bluetooth Mouse, ") +
               (bluetoothKeyboard ? "Bluetooth Keyboard." : "No Bluetooth Keyboard.");
    }
}


class ComputerBuilder {
    private Computer computer = new Computer();

    public ComputerBuilder withCPU(String cpu) {
        computer.setCPU(cpu);
        return this;
    }

    public ComputerBuilder withGPU(String gpu) {
        computer.setGPU(gpu);
        return this;
    }

    public ComputerBuilder withInternalMemory(String internalMemory) {
        computer.setInternalMemory(internalMemory);
        return this;
    }

    public ComputerBuilder withExternalMemory(String externalMemory) {
        computer.setExternalMemory(externalMemory);
        return this;
    }

    public ComputerBuilder withOS(String os) {
        computer.setOS(os);
        return this;
    }

    public ComputerBuilder withTouchScreen(boolean touchScreen) {
        computer.setTouchScreen(touchScreen);
        return this;
    }

    public ComputerBuilder withBluetoothMouse(boolean bluetoothMouse) {
        computer.setBluetoothMouse(bluetoothMouse);
        return this;
    }

    public ComputerBuilder withBluetoothKeyboard(boolean bluetoothKeyboard) {
        computer.setBluetoothKeyboard(bluetoothKeyboard);
        return this;
    }

    public Computer build() {
        return computer;
    }
}


public class ComputerBuilderDemo{

    public static void main(String[] args) {

        Computer gamingPC = new ComputerBuilder()
            .withCPU("Intel i9")
            .withGPU("NVIDIA RTX 4090")
            .withInternalMemory("32GB RAM")
            .withExternalMemory("2TB SSD")
            .withOS("Windows 11 Pro")
            .withTouchScreen(false)
            .withBluetoothMouse(true)
            .withBluetoothKeyboard(true)
            .build();

        System.out.println(gamingPC);


        Computer ultrabook = new ComputerBuilder()
            .withCPU("Apple M2")
            .withGPU("Integrated Apple GPU")
            .withInternalMemory("16GB RAM")
            .withTouchScreen(true)
            .withBluetoothMouse(false)
            .withBluetoothKeyboard(true)
            .build();

        System.out.println(ultrabook);


        Computer officePC = new ComputerBuilder()
            .withCPU("Intel i5")
            .withGPU("Integrated GPU")
            .withInternalMemory("8GB RAM")
            .withExternalMemory("512GB SSD")
            .withOS("Windows 10")
            .withBluetoothKeyboard(false)
            .build();

        System.out.println(officePC);
    }
}